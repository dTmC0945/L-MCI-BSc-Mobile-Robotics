#+title: BSc Mobile Robotics

** Table of Contents :TOC_2:
  - [[#lecture-information][Lecture Information]]
  - [[#requirements-and-the-learning-outcomes][Requirements and the Learning Outcomes]]
  - [[#grading-of-the-lecture][Grading of the Lecture]]
  - [[#lecture-sources][Lecture Sources]]
  - [[#content-and-unit-distribution][Content and Unit Distribution]]
  - [[#lecture-table-of-contents][Lecture Table of Contents]]
  - [[#documentation][Documentation]]
  - [[#related-links][Related Links]]

** Lecture Information

- The goal of this lecture is to introduce you the field of  mobile robotics,
  from its mechanical construction, to planning, to controlling, and simulating.
- We will start with mechanical concept, then mathematical ideas and continue
  on with Linux and ROS programming.

| DESCRIPTION        | VALUE                                       |
| Official Name      | Mobile Robotics                             |
| Lecture Code       | MRV                                         |
| Module Code        | MECH-B-4-MRV-MRO-ILV                        |
| Degree             | B.Sc                                        |
| Program Name       | Mechatronik Design Innovation               |
| Lecture Name       | Mobile Robotics                             |
| Semester           | 4                                           |
| Season             | SS                                          |
| Room Type          | Lecture Room                                |
| Assignments        | Personal Assignment A Personal Assignment B |
| Lecturer           | Daniel T. McGuiness, Ph.D                   |
| Module Responsible | BnM                                         |
| Software           | Python, ROS2, Linux                         |
| Hardware           | -                                           |
| SWS Total          | 4                                           |
| SWS Teaching       | 4                                           |
| UE Total           | 60                                          |
| ECTS               | 5                                           |
| Lecture Type       | ILV                                         |
| Working Language   | English                                     |

** Requirements and the Learning Outcomes

- The student should be comfortable with working with either python
  and/or C++ and be familiar with programming concepts.
- After completion, the student will have a good knowledge on Linux, ROS and
  the physical aspects of mobile robotics.

| REQUIREMENTS       | TAUGHT LECTURE  | CODE | DEGREE | OUTCOME           |
| C/C++ Programming  | Programming II  | PRO2 | B.Sc   | ROS 2 Programming |
| Python Programming | Software Design | SWD  | B.Sc   | Linux Experience  |
| -                  | -               | IOT  | B.Sc   | Programming       |
| -                  | -               | -    | -      | -                 |
| -                  | -               | -    | -      | -                 |

** Grading of the Lecture

- The lecture will have two personal assignments. The former assignment
  will comprise of mathematical and the physical nature of mobile
  robotics and the latter will focus on the software aspect of mobile robotics.
      
| ASSIGNMENT TYPE       | VALUE | QUANTITY |
| Personal Assignment A |    50 |        1 |
| Personal Assignment B |    50 |        1 |
| SUM                   |   100 |          |

** Lecture Sources

The following are a table of documentation which are useful resources which
goes well with the lectures.

| AUTHOR        | TITLE                                                 | PUBLISHER             |
| M. M. Bassa   | A very informal journey through ROS 2                 | Self-Published        |
| F. M. Rico    | A Concise Introduction to Robot Programming with ROS2 | Taylor Francis (2022) |
| B. Stroustrup | Programming Principles and Practice using C++         | Addison Wesley (2014) |

** Content and Unit Distribution

- The content and unit distribution of the lecture is as follows where a unit
  is defined as 45 min lecture.
    
| ORDER | TOPIC                   | UNITS | SELF STUDY |
|     1 | Locomotion              |     4 |          8 |
|     2 | Mobile Robot Kinematics |     4 |          8 |
|     3 | Perception - I          |     4 |          8 |
|     4 | Perception - II         |     4 |          8 |
|     5 | Perception - III        |     4 |          8 |
|     6 | Localisation - I        |     4 |          8 |
|     7 | Localisation - II       |     4 |          8 |
|     8 | Localisation - III      |     4 |          8 |
|     9 | Path Planning - I       |     4 |          8 |
|    10 | Path Planning - II      |     4 |          8 |
|    11 | Welcome to Linux        |     4 |          8 |
|    12 | Files and Permissions   |     4 |          8 |
|    13 | ROS 2 Fundamentals      |     4 |          8 |
|    14 | ROS 2 CLI Libraries     |     4 |          8 |
|    15 | ROS 2 Simulation        |     4 |          8 |
|    16 | SUM                     |    60 |        120 |

** Lecture Table of Contents

Below is the detailed structure of the lecture.

- Mobile Robot Localisation
  - Introduction
  - The problems of Noise and Aliasing
    - Sensor Noise
    - Sensor Aliasing
    - Effector Noise
    - An Error Model for Odometric Position Estimation
  - Localisation v. Hard-Coded Navigation
  - Representing Belief
    - Single Hypothesis Belief
    - Multiple Hypothesis Belief
  - Representing Maps
    - Continuous Representation
    - Decomposition Methods
    - Current Challenges
->      
  - Probabilistic Map-Based Localisation
    - Introduction
    - Markov Localisation
      - Application of Probability for Localisation
      - Application: Markov Localisation using a Topological Map
    - Kalman Filter Localisation
    - An Implementation of Kalman Filter
      - A Gentle Introduction to Kalman Filter Theory
      - Kalman Filter Localisation
  - Other Examples of Localisation Methods
    - Landmark-based Navigation
    - Globally Unique Localisation
    - Positioning Beacon systems
    - Route-Based Localisation
  - Building Maps
    - Stochastic Map Technique
    - Other Mapping Techniques
      - Cyclic Environments
      - Dynamic Environments
- ROS Concepts
  - Introduction
  - Publisher and Subscriber Architecture
  - Nodes - The Building Blocks
  - The Discovery Process
  - Communication Between Nodes
    - Description
    - Messages
      - Services
      - Actions
  - Topics
    - Publisher - Subscriber Architecture
    - Anonymity
    - Strongly-Typed
  - Services
    - Service Server
      - Service Client
  - Actions
    - Action Server
    - Action Client
  - Parameters
    - A Detailed Look
      - Declaring Parameters
      - Types of Parameters
      - Parameter Callbacks
    - Parameter Interaction
  - Working with Command Line
  - Launch File
    - ROS DOMAIN ID
      - Choosing a domain ID (short version)
      - Choosing a domain ID (long version)
    - Client Libraries
      - Supported Client Libraries
  - Intermediate Concepts
    - Defining the ROS Domain
      - Participant Constraints
    - ROS 2 Middleware Vendors
  - Configuring Quality of Service
    - Topic Statistics
  - Advanced Concepts
    - The Build System
- Command Line Tools
  - Setting the Environment
  - Turtles and Graphs
  - A Deeper Look into Nodes
  - Working with Topics
  - Working with Services
  - Working with Parameters
  - A Practical Look into Actions
  - Launching Nodes

** Documentation

For any student in need of a LaTeX class designed from the ground-up for
assignment/lab/thesis/slide for MCI needs please have a look at ~mcidoc~ class
hosted at [[https://github.com/dTmC0945/C-MCI-LaTeX-Class-mcidoc][GitHub]].

(-DTMc 2025)
